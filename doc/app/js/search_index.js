var search_data = {"index":{"searchIndex":["alldatadefs","alldatadoc","xmlparseerror","applicationcontroller","applicationhelper","authorization","booking","bookingscontroller","cancelledbooking","court","courtday","courtdaynote","courtdaynotescontroller","courtdayscontroller","courtdayshelper","courtsession","courtsessionscontroller","courtscontroller","database","databasescontroller","generators","data","staticpagescontroller","user","usersessionscontroller","usersession","usersessionshelper","userscontroller","about()","add_weekdays()","admin?()","admin?()","all_data()","all_data=()","attr_get()","attr_set()","attr_tags()","authorize()","back_to_court_days()","booked?()","booked?()","characters()","collect_court_days()","columns()","create()","create()","create()","create()","create()","create()","create()","current_user()","current_user?()","destroy()","destroy()","destroy()","destroy()","destroy_and_log()","disable()","disabled_count()","edit()","edit()","enable()","enabled?()","enabled?()","end_element()","end_file()","ensure_weekday()","error()","expect()","expired?()","expired?()","expired?()","find_on_present_page()","full_title()","fully_booked?()","generate_bookings()","generate_court_days()","help()","home()","index()","index()","index()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","late?()","late_cancels()","log_in()","log_out()","logged_in?()","master?()","master?()","model_class()","model_tags()","monday()","needed()","new()","new()","new()","new()","new()","new()","obsolete?()","offset_n_span_to_class()","order_by_role_and_name()","overbooked?()","page()","promote()","read_attr()","reason_to_exist?()","replace!()","role_to_order()","show()","show()","spoof()","spoofing()","start_attr()","start_element()","start_file()","start_model()","start_time()","timestamp()","unbooked?()","update()","update()","update()","update()","valid_role?()","version()","version()","readme_for_app"],"longSearchIndex":["alldatadefs","alldatadoc","alldatadoc::xmlparseerror","applicationcontroller","applicationhelper","authorization","booking","bookingscontroller","cancelledbooking","court","courtday","courtdaynote","courtdaynotescontroller","courtdayscontroller","courtdayshelper","courtsession","courtsessionscontroller","courtscontroller","database","databasescontroller","generators","generators::data","staticpagescontroller","user","usersessionscontroller","usersessionscontroller::usersession","usersessionshelper","userscontroller","staticpagescontroller#about()","courtday::add_weekdays()","user#admin?()","usersessionshelper#admin?()","database#all_data()","database#all_data=()","alldatadefs#attr_get()","alldatadefs#attr_set()","alldatadefs::attr_tags()","authorization#authorize()","courtdayshelper#back_to_court_days()","courtsession#booked?()","user#booked?()","alldatadoc#characters()","courtdayshelper#collect_court_days()","database::columns()","bookingscontroller#create()","courtdaynotescontroller#create()","courtsessionscontroller#create()","courtscontroller#create()","databasescontroller#create()","usersessionscontroller#create()","userscontroller#create()","usersessionshelper#current_user()","usersessionshelper#current_user?()","bookingscontroller#destroy()","courtscontroller#destroy()","usersessionscontroller#destroy()","userscontroller#destroy()","booking#destroy_and_log()","userscontroller#disable()","user::disabled_count()","courtscontroller#edit()","userscontroller#edit()","userscontroller#enable()","user#enabled?()","usersessionshelper#enabled?()","alldatadoc#end_element()","alldatadoc#end_file()","courtday::ensure_weekday()","alldatadoc#error()","alldatadoc#expect()","booking#expired?()","courtdaynote#expired?()","courtsession#expired?()","courtday::find_on_present_page()","applicationhelper#full_title()","courtsession#fully_booked?()","generators::data#generate_bookings()","generators::data#generate_court_days()","staticpagescontroller#help()","staticpagescontroller#home()","courtdayscontroller#index()","courtscontroller#index()","userscontroller#index()","booking#inspect()","cancelledbooking#inspect()","court#inspect()","courtday#inspect()","courtdaynote#inspect()","courtsession#inspect()","user#inspect()","cancelledbooking#late?()","courtsession#late_cancels()","usersessionshelper#log_in()","usersessionshelper#log_out()","usersessionshelper#logged_in?()","user#master?()","usersessionshelper#master?()","alldatadefs::model_class()","alldatadefs::model_tags()","courtday::monday()","courtsession#needed()","alldatadoc::new()","courtday::new()","databasescontroller#new()","usersessionscontroller#new()","usersessionscontroller::usersession::new()","userscontroller#new()","cancelledbooking#obsolete?()","courtdayshelper#offset_n_span_to_class()","user::order_by_role_and_name()","courtsession#overbooked?()","courtday::page()","userscontroller#promote()","alldatadoc#read_attr()","courtsession#reason_to_exist?()","database#replace!()","user#role_to_order()","databasescontroller#show()","userscontroller#show()","usersessionshelper#spoof()","usersessionshelper#spoofing()","alldatadoc#start_attr()","alldatadoc#start_element()","alldatadoc#start_file()","alldatadoc#start_model()","courtsession#start_time()","database#timestamp()","courtsession#unbooked?()","courtdaynotescontroller#update()","courtsessionscontroller#update()","courtscontroller#update()","userscontroller#update()","user::valid_role?()","alldatadefs::version()","database#version()",""],"info":[["AllDataDefs","","AllDataDefs.html","","<p>Defines how to store and read the models’ data in XML.\n"],["AllDataDoc","","AllDataDoc.html","",""],["AllDataDoc::XmlParseError","","AllDataDoc/XmlParseError.html","",""],["ApplicationController","","ApplicationController.html","",""],["ApplicationHelper","","ApplicationHelper.html","",""],["Authorization","","Authorization.html","","<p>Usage:\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">MyController</span> <span class=\"ruby-operator\">&lt;</span> <span class=\"ruby-constant\">ApplicationController</span>\n<span class=\"ruby-identifier\">extend</span> <span class=\"ruby-constant\">Authorization</span>\n  <span class=\"ruby-identifier\">aurhorise</span> [ :<span class=\"ruby-identifier\">action_1</span>, :<span class=\"ruby-identifier\">action_2</span>], <span class=\"ruby-operator\">...</span>\n</pre>\n"],["Booking","","Booking.html","",""],["BookingsController","","BookingsController.html","",""],["CancelledBooking","","CancelledBooking.html","","<p><code>obsolete?</code> objects are purged incrementally by a\n<code>before_save</code> callback\n"],["Court","","Court.html","","<p>Cascading\n<p>You cannot destroy a court that has users.\n<p>Court sessions and court day notes, however, are destroyed …\n"],["CourtDay","","CourtDay.html","","<p>Note that this class does NOT inherit <code>ActiveRecord::Base</code>.  It\nis a pseudo model mainly used to collect …\n"],["CourtDayNote","","CourtDayNote.html","",""],["CourtDayNotesController","","CourtDayNotesController.html","",""],["CourtDaysController","","CourtDaysController.html","",""],["CourtDaysHelper","","CourtDaysHelper.html","",""],["CourtSession","","CourtSession.html","","<p>Validation\n<p><code>court</code>, <code>date</code>, <code>start</code>, and\n<code>need</code> must all be present.\n<p>date &mdash; must not be on a weekend.\n"],["CourtSessionsController","","CourtSessionsController.html","",""],["CourtsController","","CourtsController.html","",""],["Database","","Database.html","",""],["DatabasesController","","DatabasesController.html","",""],["Generators","","Generators.html","",""],["Generators::Data","","Generators/Data.html","",""],["StaticPagesController","","StaticPagesController.html","",""],["User","","User.html","","<p>Validations\n<p><code>court</code>, <code>email</code>, <code>name</code>,\n<code>password</code>, <code>password_confirmation</code>, and\n<code>role</code> are all required.\n<p>email &mdash; Must …\n"],["UserSessionsController","","UserSessionsController.html","",""],["UserSessionsController::UserSession","","UserSessionsController/UserSession.html","",""],["UserSessionsHelper","","UserSessionsHelper.html","",""],["UsersController","","UsersController.html","",""],["about","StaticPagesController","StaticPagesController.html#method-i-about","()",""],["add_weekdays","CourtDay","CourtDay.html#method-c-add_weekdays","( date, days)",""],["admin?","User","User.html#method-i-admin-3F","( court = nil)",""],["admin?","UserSessionsHelper","UserSessionsHelper.html#method-i-admin-3F","()","<p>master? =&gt; admin?\n"],["all_data","Database","Database.html#method-i-all_data","()",""],["all_data=","Database","Database.html#method-i-all_data-3D","( uploaded)",""],["attr_get","AllDataDefs","AllDataDefs.html#method-i-attr_get","( model_tag, attr_tag, model_obj)","<p>Call the getter that has been defined based on <code>MODEL_DEFS</code>.\n"],["attr_set","AllDataDefs","AllDataDefs.html#method-i-attr_set","( model_tag, attr_tag, model_obj, value)","<p>Call the setter that has been defined based on <code>MODEL_DEFS</code>.\n"],["attr_tags","AllDataDefs","AllDataDefs.html#method-c-attr_tags","( model_tag)",""],["authorize","Authorization","Authorization.html#method-i-authorize","( action, role, &condition)",""],["back_to_court_days","CourtDaysHelper","CourtDaysHelper.html#method-i-back_to_court_days","( court = nil)",""],["booked?","CourtSession","CourtSession.html#method-i-booked-3F","()",""],["booked?","User","User.html#method-i-booked-3F","( court_session)",""],["characters","AllDataDoc","AllDataDoc.html#method-i-characters","( str)",""],["collect_court_days","CourtDaysHelper","CourtDaysHelper.html#method-i-collect_court_days","( court)","<p>collects data for the <code>court_days/index</code> page\n"],["columns","Database","Database.html#method-c-columns","()",""],["create","BookingsController","BookingsController.html#method-i-create","()",""],["create","CourtDayNotesController","CourtDayNotesController.html#method-i-create","()",""],["create","CourtSessionsController","CourtSessionsController.html#method-i-create","()","<p>silently does nothing at all if the data in <code>params</code> gives no\n<code>#reason_to_exist?</code>\n"],["create","CourtsController","CourtsController.html#method-i-create","()",""],["create","DatabasesController","DatabasesController.html#method-i-create","()",""],["create","UserSessionsController","UserSessionsController.html#method-i-create","()",""],["create","UsersController","UsersController.html#method-i-create","()",""],["current_user","UserSessionsHelper","UserSessionsHelper.html#method-i-current_user","()","<p>returns the logged in user, or, if master and spoofing, the spoofed user\n"],["current_user?","UserSessionsHelper","UserSessionsHelper.html#method-i-current_user-3F","( user)",""],["destroy","BookingsController","BookingsController.html#method-i-destroy","()",""],["destroy","CourtsController","CourtsController.html#method-i-destroy","()",""],["destroy","UserSessionsController","UserSessionsController.html#method-i-destroy","()",""],["destroy","UsersController","UsersController.html#method-i-destroy","()",""],["destroy_and_log","Booking","Booking.html#method-i-destroy_and_log","()","<p>creates a CancelledBooking to mirror <code>self</code>\n"],["disable","UsersController","UsersController.html#method-i-disable","()",""],["disabled_count","User","User.html#method-c-disabled_count","( court = nil)",""],["edit","CourtsController","CourtsController.html#method-i-edit","()",""],["edit","UsersController","UsersController.html#method-i-edit","()",""],["enable","UsersController","UsersController.html#method-i-enable","()",""],["enabled?","User","User.html#method-i-enabled-3F","()",""],["enabled?","UserSessionsHelper","UserSessionsHelper.html#method-i-enabled-3F","()",""],["end_element","AllDataDoc","AllDataDoc.html#method-i-end_element","( tag_name)",""],["end_file","AllDataDoc","AllDataDoc.html#method-i-end_file","( tag_name, attrs)","<p>does not seem to happen, actually\n"],["ensure_weekday","CourtDay","CourtDay.html#method-c-ensure_weekday","( date)",""],["error","AllDataDoc","AllDataDoc.html#method-i-error","( message)",""],["expect","AllDataDoc","AllDataDoc.html#method-i-expect","( got, expected)",""],["expired?","Booking","Booking.html#method-i-expired-3F","()",""],["expired?","CourtDayNote","CourtDayNote.html#method-i-expired-3F","()",""],["expired?","CourtSession","CourtSession.html#method-i-expired-3F","()",""],["find_on_present_page","CourtDay","CourtDay.html#method-c-find_on_present_page","( date)",""],["full_title","ApplicationHelper","ApplicationHelper.html#method-i-full_title","( page_title)",""],["fully_booked?","CourtSession","CourtSession.html#method-i-fully_booked-3F","()",""],["generate_bookings","Generators::Data","Generators/Data.html#method-i-generate_bookings","( *courts)",""],["generate_court_days","Generators::Data","Generators/Data.html#method-i-generate_court_days","( start_date, no_weekdays, *courts)",""],["help","StaticPagesController","StaticPagesController.html#method-i-help","()",""],["home","StaticPagesController","StaticPagesController.html#method-i-home","()",""],["index","CourtDaysController","CourtDaysController.html#method-i-index","()","<p>select and serve one <code>CourtDay.page</code>\n"],["index","CourtsController","CourtsController.html#method-i-index","()",""],["index","UsersController","UsersController.html#method-i-index","()",""],["inspect","Booking","Booking.html#method-i-inspect","()",""],["inspect","CancelledBooking","CancelledBooking.html#method-i-inspect","()",""],["inspect","Court","Court.html#method-i-inspect","()",""],["inspect","CourtDay","CourtDay.html#method-i-inspect","()",""],["inspect","CourtDayNote","CourtDayNote.html#method-i-inspect","()",""],["inspect","CourtSession","CourtSession.html#method-i-inspect","()",""],["inspect","User","User.html#method-i-inspect","()",""],["late?","CancelledBooking","CancelledBooking.html#method-i-late-3F","()",""],["late_cancels","CourtSession","CourtSession.html#method-i-late_cancels","()",""],["log_in","UserSessionsHelper","UserSessionsHelper.html#method-i-log_in","( user)","<p>kills any spoofing going on\n"],["log_out","UserSessionsHelper","UserSessionsHelper.html#method-i-log_out","()",""],["logged_in?","UserSessionsHelper","UserSessionsHelper.html#method-i-logged_in-3F","()",""],["master?","User","User.html#method-i-master-3F","()",""],["master?","UserSessionsHelper","UserSessionsHelper.html#method-i-master-3F","()","<p>master? =&gt; admin?\n"],["model_class","AllDataDefs","AllDataDefs.html#method-c-model_class","( model_tag)",""],["model_tags","AllDataDefs","AllDataDefs.html#method-c-model_tags","()",""],["monday","CourtDay","CourtDay.html#method-c-monday","( date)",""],["needed","CourtSession","CourtSession.html#method-i-needed","()",""],["new","AllDataDoc","AllDataDoc.html#method-c-new","()",""],["new","CourtDay","CourtDay.html#method-c-new","( attrs)",""],["new","DatabasesController","DatabasesController.html#method-i-new","()",""],["new","UserSessionsController","UserSessionsController.html#method-i-new","()",""],["new","UserSessionsController::UserSession","UserSessionsController/UserSession.html#method-c-new","( court_id)",""],["new","UsersController","UsersController.html#method-i-new","()",""],["obsolete?","CancelledBooking","CancelledBooking.html#method-i-obsolete-3F","()","<p>the <code>BOOKING_DAYS_AHEAD_MAX</code> limit (defined in\n<code>config/initializers/site_ruby.rb</code>) is rather arbitrary\n"],["offset_n_span_to_class","CourtDaysHelper","CourtDaysHelper.html#method-i-offset_n_span_to_class","( offset, span)",""],["order_by_role_and_name","User","User.html#method-c-order_by_role_and_name","( court)",""],["overbooked?","CourtSession","CourtSession.html#method-i-overbooked-3F","()",""],["page","CourtDay","CourtDay.html#method-c-page","( court, date_in_first_week, *start_tods)",""],["promote","UsersController","UsersController.html#method-i-promote","()",""],["read_attr","AllDataDoc","AllDataDoc.html#method-i-read_attr","( tag_name, attrs)",""],["reason_to_exist?","CourtSession","CourtSession.html#method-i-reason_to_exist-3F","()",""],["replace!","Database","Database.html#method-i-replace-21","()",""],["role_to_order","User","User.html#method-i-role_to_order","()",""],["show","DatabasesController","DatabasesController.html#method-i-show","()",""],["show","UsersController","UsersController.html#method-i-show","()",""],["spoof","UserSessionsHelper","UserSessionsHelper.html#method-i-spoof","( user)",""],["spoofing","UserSessionsHelper","UserSessionsHelper.html#method-i-spoofing","()",""],["start_attr","AllDataDoc","AllDataDoc.html#method-i-start_attr","( tag_name, attrs)",""],["start_element","AllDataDoc","AllDataDoc.html#method-i-start_element","( tag_name, attrs = [ ])",""],["start_file","AllDataDoc","AllDataDoc.html#method-i-start_file","( tag_name, attrs)",""],["start_model","AllDataDoc","AllDataDoc.html#method-i-start_model","( tag_name, attrs)",""],["start_time","CourtSession","CourtSession.html#method-i-start_time","()",""],["timestamp","Database","Database.html#method-i-timestamp","()",""],["unbooked?","CourtSession","CourtSession.html#method-i-unbooked-3F","()",""],["update","CourtDayNotesController","CourtDayNotesController.html#method-i-update","()",""],["update","CourtSessionsController","CourtSessionsController.html#method-i-update","()","<p>ignores all of <code>params</code> except <code>[ :court_session][\n:need]</code>, silently destroys an existing object if no\n<code>#reason_to_exist?</code> …\n"],["update","CourtsController","CourtsController.html#method-i-update","()",""],["update","UsersController","UsersController.html#method-i-update","()","<p>reads only selected parts of <code>params</code> depending of who is logged\nin, NEVER changes <code>court</code>\n"],["valid_role?","User","User.html#method-c-valid_role-3F","( role)",""],["version","AllDataDefs","AllDataDefs.html#method-c-version","()",""],["version","Database","Database.html#method-i-version","()",""],["README_FOR_APP","","doc/README_FOR_APP.html","","<p>This is a simple Ruby-on-Rails application for witness support\norganizations to define need for witness …\n"]]}}